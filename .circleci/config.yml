version: 2.1

orbs:
  node: circleci/node@5.0.1
  heroku: circleci/heroku@2.0.0
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Install dependencies"
          npm install

  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests"
          npm run test

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku stack:set container -a fathomless-hamlet-28308
            heroku container:push web -a fathomless-hamlet-28308
            heroku container:release web -a fathomless-hamlet-28308

  build-and-push:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Docker Login
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
      - run:
          name: Build Docker Image
          command: docker build -t vincentnwa/container-assignment:${CIRCLE_TAG:-latest} .
      - run:
          name: Push Docker Image
          command: docker push vincentnwa/container-assignment:${CIRCLE_TAG:-latest}

  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: vincentnwa/container-assignment
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME




workflows:
  simple_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main
      - scan:
          requires:
            - test
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: release
            tags:
              only: /^v.*/
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only: release
            tags:
              only: /^v.*/